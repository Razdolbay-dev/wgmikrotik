import express from 'express';
import fs from 'fs';
import dotenv from 'dotenv';
import path from 'path';

const router = express.Router();
const ENV_PATH = path.resolve('.env');

// üìñ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env
router.get('/', (req, res) => {
    try {
        const env = dotenv.parse(fs.readFileSync(ENV_PATH, 'utf-8'));
        res.json(env);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ .env:', err);
        res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å .env' });
    }
});

// üíæ –û–±–Ω–æ–≤–∏—Ç—å .env
router.post('/', (req, res) => {
    try {
        const newEnv = req.body;

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –≤ —Ñ–æ—Ä–º–∞—Ç .env
        const content = Object.entries(newEnv)
            .map(([key, value]) => `${key}='${value}'`)
            .join('\n');

        fs.writeFileSync(ENV_PATH, content);

        // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º process.env
        for (const [k, v] of Object.entries(newEnv)) {
            process.env[k] = v;
        }

        res.json({ status: 'ok' });
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ .env:', err);
        res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .env' });
    }
});

export default router;
